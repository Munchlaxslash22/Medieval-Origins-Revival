plugins {
	id 'fabric-loom' version '0.12-SNAPSHOT'
	id 'maven-publish'
	id "com.modrinth.minotaur" version "2.+"
	id 'net.darkhax.curseforgegradle' version "1.1.16"
}

sourceCompatibility = JavaVersion.VERSION_17
targetCompatibility = JavaVersion.VERSION_17

archivesBaseName = project.archives_base_name
version = project.mod_version
group = project.maven_group

repositories {
	maven { url = "https://maven.jamieswhiteshirt.com/libs-release" }
	maven { url = "https://maven.nucleoid.xyz/" }
	maven { url = 'https://maven.blamejared.com' }
	maven { url = "https://maven.willbl.dev/releases" }
	maven { url = "https://jitpack.io" }
	maven { url = "https://maven.parchmentmc.org" }
	maven { url = "https://maven.terraformersmc.com/" }
	maven { url = 'https://maven.merchantpug.net/releases/' }
	maven { url = 'https://maven.ladysnake.org/releases' }
	maven {
		url = 'https://maven.cafeteria.dev'
		content {
			includeGroup 'net.adriantodt.fabricmc'
		}
	}
	exclusiveContent {
		forRepository {
			maven {
				name = "Modrinth"
				url = "https://api.modrinth.com/maven"
			}
		}
		filter {
			includeGroup "maven.modrinth"
		}
	}
	maven { url "https://maven.shedaniel.me" }
	maven { url "https://maven.bai.lol" }
	maven { url 'https://maven.kosmx.dev/' }
	maven { url 'https://libs.azuredoom.com:4443/mods' }
	maven { url = "https://maven.parchmentmc.org" }
	maven { url "https://maven.willbl.dev/releases" }
	maven { url "https://cursemaven.com" }
	maven { url = "https://nexus.resourcefulbees.com/repository/maven-public/" }
	maven { url = "https://jm.gserv.me/repository/maven-public/" }

}

dependencies {
	minecraft "com.mojang:minecraft:${project.minecraft_version}"
	//mappings "net.fabricmc:yarn:${project.yarn_mappings}:v2"

	mappings loom.layered() {

		officialMojangMappings()
		// Use parchment mappings. NOTE: Parchment maven must be manually added. (https://maven.parchmentmc.org)
		parchment("org.parchmentmc.data:parchment-1.20.1:2023.09.03@zip")
	}

	modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"
	modImplementation "net.fabricmc.fabric-api:fabric-api:${project.fabric_version}"

	// Origins Local - Add Apoli and Calio to a /libs/ folder in the root project directory
	modImplementation ("maven.modrinth:origins:${project.origins_version}")
	modImplementation fileTree(dir: '/libs/', include: '*.jar')

	//
	modLocalRuntime "dev.onyxstudios.cardinal-components-api:cardinal-components-base:${project.cca_version}"
	modLocalRuntime "dev.onyxstudios.cardinal-components-api:cardinal-components-entity:${project.cca_version}"
	//modImplementation include("maven.modrinth:additionalentityattributes:${project.aea_version}")

	modImplementation include("com.jamieswhiteshirt:reach-entity-attributes:${project.rea_version}")
	modImplementation include("com.github.apace100:autotag-api:${autotag_version}")
	modImplementation include("net.merchantpug:Apugli:${apugli_version}+${minecraft_version}-fabric")
	modImplementation include("maven.modrinth:projectile-damage-attribute:${project.projectile_damage}-fabric")

	implementation("com.github.LlamaLad7:MixinExtras:0.2.0-beta.4")
	annotationProcessor("com.github.LlamaLad7:MixinExtras:0.2.0-beta.4")

	modImplementation("com.github.apace100:autotag:${autotag_version}")

	modApi("com.github.Virtuoel:Pehkui:${pehkui_version}", {
		exclude group: "net.fabricmc.fabric-api"
	})
	modApi("me.shedaniel.cloth:cloth-config-fabric:${cloth_config_version}") {
		exclude(group: "net.fabricmc.fabric-api")
	}

	include(implementation(annotationProcessor("com.github.bawnorton.mixinsquared:mixinsquared-fabric:0.1.2-beta.5")))

	// Icarus + Deps
	modImplementation ("dev.emi:trinkets:${project.trinkets_version}")
	modImplementation("maven.modrinth:icarus:${project.icarus_version}+Fabric")

	modLocalRuntime("com.teamresourceful.resourcefulconfig:resourcefulconfig-fabric-1.20.1:${project.resourceful_version}")
	modLocalRuntime ("mysticdrew:common-networking-fabric:${project.cmnw_version}")

	// RPG Series
	modLocalRuntime("maven.modrinth:ranged-weapon-api:${project.ranged_weapon_api_version}")
	modImplementation("maven.modrinth:spell-power:${project.spell_power_version}-fabric")
	modImplementation("maven.modrinth:spell-engine:${project.spell_engine_version}-fabric")
	modLocalRuntime("maven.modrinth:runes:${project.runes_version}-fabric")
	modImplementation("maven.modrinth:better-combat:${project.bettercombat_version}-fabric")
	modLocalRuntime("maven.modrinth:structure-pool-api:${project.structure_pool_api_version}-fabric")

	modLocalRuntime("maven.modrinth:wizards:${project.wizards_version}-fabric")
	modLocalRuntime("maven.modrinth:paladins-and-priests:${project.paladins_version}-fabric")
	modLocalRuntime("maven.modrinth:archers:${project.archers_version}-fabric")
	modLocalRuntime("maven.modrinth:jewelry:${project.jewelry_version}-fabric")
	modLocalRuntime("maven.modrinth:rpgdifficulty:${project.rpg_version}")

	modLocalRuntime("dev.kosmx.player-anim:player-animation-lib-fabric:${project.player_anim_version}")
	implementation("com.github.ZsoltMolnarrr:TinyConfig:${project.tiny_config_version}")
	modLocalRuntime("mod.azure.azurelibarmor:azurelibarmor-fabric-${project.azure_mc_version}:${project.azure_lib_version}")
	modCompileOnly ("me.shedaniel:RoughlyEnoughItems-api-fabric:${project.rei_version}")
	modRuntimeOnly ("me.shedaniel:RoughlyEnoughItems-fabric:${project.rei_version}")
	modRuntimeOnly ("curse.maven:jade-324717:${project.jade_id}")

	modLocalRuntime "io.github.ladysnake:PlayerAbilityLib:${pal_version}"
	include "io.github.ladysnake:PlayerAbilityLib:${pal_version}"

}
processResources {
	inputs.property "version", project.version

	filesMatching("fabric.mod.json") {
		expand "version": project.version
	}
}

tasks.withType(JavaCompile).configureEach {
	// Minecraft 1.17 (21w19a) upwards uses Java 16.
	it.options.release = 17
}

java {
	// Loom will automatically attach sourcesJar to a RemapSourcesJar task and to the "build" task
	// if it is present.
	// If you remove this line, sources will not be generated.
	withSourcesJar()
}

jar {
	from("LICENSE") {
		rename { "${it}_${project.archivesBaseName}"}
	}
}

// configure the maven publication
publishing {
	publications {
		mavenJava(MavenPublication) {
			from components.java
		}
	}

	// See https://docs.gradle.org/current/userguide/publishing_maven.html for information on how to set up publishing.
	repositories {
		// Add repositories to publish to here.
		// Notice: This block does NOT have the same function as the block in the top level.
		// The repositories here will be used for publishing your artifact, not for
		// retrieving dependencies.
	}
}

modrinth {
	token = System.getenv("MODRINTH_TOKEN")
	projectId = "medieval-origins-revival"
	versionType = "release"
	versionName = "Medieval Origins Revival " + project.version
	uploadFile = remapJar
	gameVersions = ["1.20.1"]
	loaders = ["fabric"]
	changelog = "[Changelog](https://github.com/muon-rw/Medieval-Origins-Revival/blob/master/changelog.md)"
	//debugMode = true
	dependencies {
		required.project("origins")
		required.project("pehkui")
		required.project("spell-power")
	}
}

task publishCurseForge(type: net.darkhax.curseforgegradle.TaskPublishCurseForge) {
	apiToken = System.getenv("CF_TOKEN")
	//debugMode = true
	def mainFile = upload(897171, remapJar)
	mainFile.changelog = "https://github.com/muon-rw/Medieval-Origins-Revival/blob/master/changelog.md"
	mainFile.releaseType = "release"
	mainFile.addGameVersion("1.20.1")
	mainFile.addModLoader("fabric")
	mainFile.displayName = project.archives_base_name + "-" + project.version
	mainFile.addRequirement("origins")
	mainFile.addRequirement("pehkui")
	mainFile.addRequirement("spell-power")
}
