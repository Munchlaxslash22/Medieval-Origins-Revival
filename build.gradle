plugins {
	id 'fabric-loom' version '0.12-SNAPSHOT'
	id 'maven-publish'
}

sourceCompatibility = JavaVersion.VERSION_17
targetCompatibility = JavaVersion.VERSION_17

archivesBaseName = project.archives_base_name
version = project.mod_version
group = project.maven_group

repositories {
	maven { url = "https://maven.jamieswhiteshirt.com/libs-release" }
	maven { url = "https://maven.nucleoid.xyz/" }
	maven { url = 'https://maven.blamejared.com' }
	maven { url = "https://maven.willbl.dev/releases" }
	maven {	url = "https://jitpack.io"	}
	maven {	url = "https://maven.parchmentmc.org"	}
	maven { url = "https://maven.terraformersmc.com/" }
	maven {
		url = "https://api.modrinth.com/maven"
		content {
			includeGroup("maven.modrinth")
		}
	}
	maven { url "https://maven.shedaniel.me" }
	maven { url "https://maven.bai.lol" }
	maven { url 'https://maven.kosmx.dev/' }
	maven { url 'https://libs.azuredoom.com:4443/mods' }
	maven { url "https://maven.parchmentmc.org" }
	//Ladysnake Maven down exploding my workflow AAAAAAAAAAAAAAAAAA

}

dependencies {
	minecraft "com.mojang:minecraft:${project.minecraft_version}"
	mappings loom.layered() {
		officialMojangMappings()
		// Use parchment mappings. NOTE: Parchment maven must be manually added. (https://maven.parchmentmc.org)
		parchment("org.parchmentmc.data:parchment-1.20.1:2023.06.26@zip")
	}
	modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"
	modImplementation "net.fabricmc.fabric-api:fabric-api:${project.fabric_version}"

	// Origins Local - Add Origins, Apoli, Calio, Cloth Config, and Player Ability Lib to a /libs/ folder
	modImplementation fileTree(dir: '/libs/', include: '*.jar')

	//
	//modImplementation "dev.onyxstudios.cardinal-components-api:cardinal-components-base:${project.cca_version}"
	//modImplementation "dev.onyxstudios.cardinal-components-api:cardinal-components-entity:${project.cca_version}"
	modImplementation include("maven.modrinth:additionalentityattributes:${project.aea_version}")
	modImplementation include("com.jamieswhiteshirt:reach-entity-attributes:${project.rea_version}")
	modImplementation include("eu.pb4:common-protection-api:${project.cpa_version}")

	implementation("com.github.LlamaLad7:MixinExtras:0.2.0-beta.4")
	annotationProcessor("com.github.LlamaLad7:MixinExtras:0.2.0-beta.4")

	modImplementation("com.github.apace100:autotag:${autotag_version}")
	modImplementation("com.github.apace100:autotag-api:${autotag_version}")

	modApi("com.github.Virtuoel:Pehkui:${pehkui_version}", {
		exclude group: "net.fabricmc.fabric-api"
	})


	// Icarus + Trinkets/MidnightLib
	//modImplementation ("dev.emi:trinkets:${project.trinkets_version}")
	modImplementation("maven.modrinth:icarus:${project.icarus_version}")
	modImplementation("maven.modrinth:midnightlib:${project.midnightlib_version}")

	// RPG Series
	modImplementation("maven.modrinth:projectile-damage-attribute:${project.projectile_damage}-fabric")
	modImplementation("maven.modrinth:spell-power:${project.spell_power_version}-fabric")
	modImplementation("maven.modrinth:spell-engine:${project.spell_engine_version}-fabric")
	modImplementation("maven.modrinth:runes:${project.runes_version}-fabric")
	modImplementation("maven.modrinth:better-combat:${project.bettercombat_version}-fabric")

	modImplementation("dev.kosmx.player-anim:player-animation-lib-fabric:${project.player_anim_version}")
	implementation("com.github.ZsoltMolnarrr:TinyConfig:${project.tiny_config_version}")
	modImplementation("mod.azure.azurelibarmor:azurelibarmor-fabric-${project.azure_mc_version}:${project.azure_lib_version}")
}
processResources {
	inputs.property "version", project.version

	filesMatching("fabric.mod.json") {
		expand "version": project.version
	}
}

tasks.withType(JavaCompile).configureEach {
	// Minecraft 1.17 (21w19a) upwards uses Java 16.
	it.options.release = 17
}

java {
	// Loom will automatically attach sourcesJar to a RemapSourcesJar task and to the "build" task
	// if it is present.
	// If you remove this line, sources will not be generated.
	withSourcesJar()
}

jar {
	from("LICENSE") {
		rename { "${it}_${project.archivesBaseName}"}
	}
}

// configure the maven publication
publishing {
	publications {
		mavenJava(MavenPublication) {
			from components.java
		}
	}

	// See https://docs.gradle.org/current/userguide/publishing_maven.html for information on how to set up publishing.
	repositories {
		// Add repositories to publish to here.
		// Notice: This block does NOT have the same function as the block in the top level.
		// The repositories here will be used for publishing your artifact, not for
		// retrieving dependencies.
	}
}
