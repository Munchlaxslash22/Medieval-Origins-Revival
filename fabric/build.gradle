plugins {
    id 'java'
    id 'idea'
    id 'maven-publish'
    id 'fabric-loom'
}
base {
    archivesName = "${mod_name}-fabric-${minecraft_version}"
}

repositories {
    maven { url = "https://maven.jamieswhiteshirt.com/libs-release" }
    maven { url = "https://maven.nucleoid.xyz/" }
    maven { url = 'https://maven.blamejared.com' }
    maven { url = "https://maven.willbl.dev/releases" }
    maven { url = "https://jitpack.io" }
    maven { url = "https://maven.parchmentmc.org" }
    maven { url = "https://maven.terraformersmc.com/" }
    maven { url = 'https://maven.merchantpug.net/releases/' }
    maven { url = 'https://maven.ladysnake.org/releases' }
    maven {
        url = 'https://maven.cafeteria.dev'
        content {
            includeGroup 'net.adriantodt.fabricmc'
        }
    }
    exclusiveContent {
        forRepository {
            maven {
                name = "Modrinth"
                url = "https://api.modrinth.com/maven"
            }
        }
        filter {
            includeGroup "maven.modrinth"
        }
    }
    maven { url "https://maven.shedaniel.me" }
    maven { url "https://maven.bai.lol" }
    maven { url 'https://maven.kosmx.dev/' }
    maven { url 'https://libs.azuredoom.com:4443/mods' }
    maven { url = "https://maven.parchmentmc.org" }
    maven { url "https://maven.willbl.dev/releases" }
    maven { url "https://cursemaven.com" }
    maven { url = "https://nexus.resourcefulbees.com/repository/maven-public/" }
    maven { url = "https://jm.gserv.me/repository/maven-public/" }

}

dependencies {
    minecraft "com.mojang:minecraft:${minecraft_version}"
    mappings loom.layered() {
        officialMojangMappings()
        // Use parchment mappings. NOTE: Parchment maven must be manually added. (https://maven.parchmentmc.org)
        parchment("org.parchmentmc.data:parchment-${minecraft_version}:${parchment_version}@zip")
    }
    modImplementation "net.fabricmc:fabric-loader:${fabric_loader_version}"
    modImplementation "net.fabricmc.fabric-api:fabric-api:${fabric_version}"
    implementation group: 'com.google.code.findbugs', name: 'jsr305', version: '3.0.1'
    implementation project(":common")

    // Origins
    modImplementation("com.github.apace100:origins-fabric:v${project.origins_version}")
    modImplementation ("com.github.apace100:apoli:${project.apoli_version}")
    modImplementation ("com.github.apace100:calio:${project.calio_version}")
    //modImplementation fileTree(dir: '/libs/', include: '*.jar')
    modApi("dev.onyxstudios.cardinal-components-api:cardinal-components-base:${project.cca_version}") {
        exclude(group: "net.fabricmc.fabric-api")
    }
    modApi("dev.onyxstudios.cardinal-components-api:cardinal-components-entity:${project.cca_version}") {
        exclude(group: "net.fabricmc.fabric-api")
    }
    //modImplementation include("maven.modrinth:additionalentityattributes:${project.aea_version}")
    modImplementation include("com.jamieswhiteshirt:reach-entity-attributes:${project.rea_version}")

    // Other required
    modApi("com.github.Virtuoel:Pehkui:${pehkui_version}", {
        exclude group: "net.fabricmc.fabric-api"
    })
    modImplementation include("net.merchantpug:Apugli:${apugli_version}+${minecraft_version}-fabric")

    implementation("com.github.LlamaLad7:MixinExtras:0.2.0-beta.4")
    annotationProcessor("com.github.LlamaLad7:MixinExtras:0.2.0-beta.4")
    include(implementation(annotationProcessor("com.github.bawnorton.mixinsquared:mixinsquared-fabric:0.1.2-beta.5")))


    // deprecated for removal
    modImplementation include("com.github.apace100:autotag-api:${autotag_version}")
    modImplementation include("maven.modrinth:projectile-damage-attribute:${project.projectile_damage}-fabric")



    // etc

    modApi("me.shedaniel.cloth:cloth-config-fabric:${cloth_config_version}") {
        exclude(group: "net.fabricmc.fabric-api")
    }

    // Icarus + Deps
    modImplementation ("dev.emi:trinkets:${project.trinkets_version}")
    modImplementation("maven.modrinth:icarus:${project.icarus_version}+Fabric")
    modLocalRuntime("com.teamresourceful.resourcefulconfig:resourcefulconfig-fabric-1.20.1:${project.resourceful_version}")
    modLocalRuntime ("mysticdrew:common-networking-fabric:${project.cmnw_version}")

    // RPG Series
    modLocalRuntime("maven.modrinth:ranged-weapon-api:${project.ranged_weapon_api_version}")
    modImplementation("maven.modrinth:spell-power:${project.spell_power_version}-fabric")
    modImplementation("maven.modrinth:spell-engine:${project.spell_engine_version}-fabric")
    modLocalRuntime("maven.modrinth:runes:${project.runes_version}-fabric")
    modImplementation("maven.modrinth:better-combat:${project.bettercombat_version}-fabric")
    modLocalRuntime("maven.modrinth:structure-pool-api:${project.structure_pool_api_version}-fabric")

    modLocalRuntime("maven.modrinth:wizards:${project.wizards_version}-fabric")
    modLocalRuntime("maven.modrinth:paladins-and-priests:${project.paladins_version}-fabric")
    modLocalRuntime("maven.modrinth:archers:${project.archers_version}-fabric")
    modLocalRuntime("maven.modrinth:jewelry:${project.jewelry_version}-fabric")
    modLocalRuntime("maven.modrinth:rpgdifficulty:${project.rpg_version}")

    modImplementation "curse.maven:rpgmana-1021902:5447010"

    modLocalRuntime("dev.kosmx.player-anim:player-animation-lib-fabric:${project.player_anim_version}")
    implementation("com.github.ZsoltMolnarrr:TinyConfig:${project.tiny_config_version}")
    modLocalRuntime("mod.azure.azurelibarmor:azurelibarmor-fabric-${project.minecraft_version}:${project.azure_lib_version}")
    modCompileOnly ("me.shedaniel:RoughlyEnoughItems-api-fabric:${project.rei_version}")
    modRuntimeOnly ("me.shedaniel:RoughlyEnoughItems-fabric:${project.rei_version}")
    modRuntimeOnly ("curse.maven:jade-324717:${project.jade_id}")

    modImplementation "io.github.ladysnake:PlayerAbilityLib:${pal_version}"
    include "io.github.ladysnake:PlayerAbilityLib:${pal_version}"

    // Simply Swords
    //modLocalRuntime("maven.modrinth:simply-swords:${project.simply_swords_version}")

}

loom {
    if (project(":common").file("src/main/resources/${mod_id}.accesswidener").exists()) {
        accessWidenerPath.set(project(":common").file("src/main/resources/${mod_id}.accesswidener"))
    }
    mixin {
        defaultRefmapName.set("${mod_id}.refmap.json")
    }
    runs {
        client {
            client()
            setConfigName("Fabric Client")
            ideConfigGenerated(true)
            runDir("run")
        }
        server {
            server()
            setConfigName("Fabric Server")
            ideConfigGenerated(true)
            runDir("run")
        }
    }
}

tasks.withType(JavaCompile).configureEach {
    source(project(":common").sourceSets.main.allSource)
}
tasks.withType(Javadoc).configureEach {
    source(project(":common").sourceSets.main.allJava)
}
tasks.named("sourcesJar", Jar) {
    from(project(":common").sourceSets.main.allSource)
}

processResources {
    from project(":common").sourceSets.main.resources
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            artifactId base.archivesName.get()
            from components.java
        }
    }
    repositories {
        maven {
            url "file://" + System.getenv("local_maven")
        }
    }
}
